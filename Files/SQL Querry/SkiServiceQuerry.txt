USE [master]
GO

IF DB_ID('JetstreamServiceDB') IS NULL
BEGIN
    CREATE DATABASE [JetstreamServiceDB]
END
GO

USE [JetstreamServiceDB]
GO

-- Tabelle Employees
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Employees]') AND type in (N'U'))
BEGIN
    CREATE TABLE [dbo].[Employees](
        [EmployeeID] [int] IDENTITY(1,1) NOT NULL,
        [Username] [nvarchar](255) NOT NULL,
        [Password] [nvarchar](255) NOT NULL,
        [FailedLoginAttempts] [int] NULL CONSTRAINT DF_Employees_FailedLoginAttempts DEFAULT(0),
        [IsLocked] [bit] NULL CONSTRAINT DF_Employees_IsLocked DEFAULT(0),
        [IsAdmin] [bit] NULL CONSTRAINT DF_Employees_IsAdmin DEFAULT(0),
        [Role] [nvarchar](50) NULL CONSTRAINT DF_Employees_Role DEFAULT('User'),
    PRIMARY KEY CLUSTERED 
    (
        [EmployeeID] ASC
    )
    )
END
GO

-- Tabelle Services
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Services]') AND type in (N'U'))
BEGIN
    CREATE TABLE [dbo].[Services](
        [ServiceID] [int] IDENTITY(1,1) NOT NULL,
        [ServiceName] [nvarchar](100) NOT NULL,
    PRIMARY KEY CLUSTERED 
    (
        [ServiceID] ASC
    ),
    UNIQUE NONCLUSTERED 
    (
        [ServiceName] ASC
    )
    )
END
GO

-- Tabelle Orders
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Orders]') AND type in (N'U'))
BEGIN
    CREATE TABLE [dbo].[Orders](
        [OrderID] [int] IDENTITY(1,1) NOT NULL,
        [CustomerName] [nvarchar](100) NOT NULL,
        [Email] [nvarchar](100) NOT NULL,
        [Phone] [nvarchar](20) NULL,
        [Priority] [nvarchar](50) NOT NULL,
        [ServiceID] [int] NOT NULL,
        [Status] [nvarchar](20) NOT NULL CONSTRAINT DF_Orders_Status DEFAULT('Offen'),
        [IsDeleted] [bit] NOT NULL CONSTRAINT DF_Orders_IsDeleted DEFAULT(0),
        [DateCreated] [datetime] NOT NULL CONSTRAINT DF_Orders_DateCreated DEFAULT(GETDATE()),
        [DateModified] [datetime] NULL,
    PRIMARY KEY CLUSTERED 
    (
        [OrderID] ASC
    )
    )
END
GO

-- Indexe für Orders
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE name='IDX_Orders_Priority' AND object_id = OBJECT_ID('dbo.Orders'))
CREATE NONCLUSTERED INDEX [IDX_Orders_Priority] ON [dbo].[Orders]([Priority] ASC);
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE name='IDX_Orders_Status' AND object_id = OBJECT_ID('dbo.Orders'))
CREATE NONCLUSTERED INDEX [IDX_Orders_Status] ON [dbo].[Orders]([Status] ASC);
GO

-- Foreign Key zwischen Orders und Services
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_Orders_Services]') AND parent_object_id = OBJECT_ID(N'[dbo].[Orders]'))
BEGIN
    ALTER TABLE [dbo].[Orders]  WITH CHECK ADD  CONSTRAINT [FK_Orders_Services] FOREIGN KEY([ServiceID])
    REFERENCES [dbo].[Services] ([ServiceID])
END
GO

-- Beispiel-Daten einfügen

-- Services einfügen (falls noch nicht vorhanden)
IF NOT EXISTS (SELECT 1 FROM [dbo].[Services] WHERE ServiceName = 'Kleiner Service')
INSERT INTO [dbo].[Services](ServiceName) VALUES ('Kleiner Service');

IF NOT EXISTS (SELECT 1 FROM [dbo].[Services] WHERE ServiceName = 'Grosser Service')
INSERT INTO [dbo].[Services](ServiceName) VALUES ('Grosser Service');

IF NOT EXISTS (SELECT 1 FROM [dbo].[Services] WHERE ServiceName = 'Rennski-Service')
INSERT INTO [dbo].[Services](ServiceName) VALUES ('Rennski-Service');

IF NOT EXISTS (SELECT 1 FROM [dbo].[Services] WHERE ServiceName = 'Bindung montieren und einstellen')
INSERT INTO [dbo].[Services](ServiceName) VALUES ('Bindung montieren und einstellen');

IF NOT EXISTS (SELECT 1 FROM [dbo].[Services] WHERE ServiceName = 'Fell zuschneiden')
INSERT INTO [dbo].[Services](ServiceName) VALUES ('Fell zuschneiden');

IF NOT EXISTS (SELECT 1 FROM [dbo].[Services] WHERE ServiceName = 'Heisswachsen')
INSERT INTO [dbo].[Services](ServiceName) VALUES ('Heisswachsen');

-- Employees einfügen
-- 2 Admins
IF NOT EXISTS (SELECT 1 FROM [dbo].[Employees] WHERE Username = 'admin_user')
INSERT INTO [dbo].[Employees](Username, [Password], IsAdmin, IsLocked) VALUES ('admin_user','pass',1,0);

IF NOT EXISTS (SELECT 1 FROM [dbo].[Employees] WHERE Username = 'admin_user2')
INSERT INTO [dbo].[Employees](Username, [Password], IsAdmin, IsLocked) VALUES ('admin_user2','pass',1,0);

-- 8 weitere Benutzer, davon 3 gesperrt (user6, user7, user8)
DECLARE @i INT = 1;
WHILE @i <= 8
BEGIN
    DECLARE @username NVARCHAR(255) = 'user' + CAST(@i AS NVARCHAR(50));
    IF NOT EXISTS (SELECT 1 FROM [dbo].[Employees] WHERE Username = @username)
    BEGIN
        IF @i >= 6
            INSERT INTO [dbo].[Employees](Username, [Password], IsAdmin, IsLocked) VALUES (@username,'pass',0,1);
        ELSE
            INSERT INTO [dbo].[Employees](Username, [Password], IsAdmin, IsLocked) VALUES (@username,'pass',0,0);
    END
    SET @i = @i + 1;
END

-- Orders einfügen (4 Beispiel-Orders)
IF NOT EXISTS (SELECT 1 FROM [dbo].[Orders] WHERE CustomerName = 'Hans Muster')
INSERT INTO [dbo].[Orders](CustomerName, Email, Phone, Priority, ServiceID) VALUES 
('Hans Muster', 'hans.muster@example.com', '123456789', 'Hoch', 1);

IF NOT EXISTS (SELECT 1 FROM [dbo].[Orders] WHERE CustomerName = 'Maria Meier')
INSERT INTO [dbo].[Orders](CustomerName, Email, Phone, Priority, ServiceID) VALUES 
('Maria Meier', 'maria.meier@example.com', '987654321', 'Normal', 2);

IF NOT EXISTS (SELECT 1 FROM [dbo].[Orders] WHERE CustomerName = 'Peter Schmid')
INSERT INTO [dbo].[Orders](CustomerName, Email, Phone, Priority, ServiceID) VALUES 
('Peter Schmid', 'peter.schmid@example.com', '456789123', 'Niedrig', 4);

IF NOT EXISTS (SELECT 1 FROM [dbo].[Orders] WHERE CustomerName = 'Laura Müller')
INSERT INTO [dbo].[Orders](CustomerName, Email, Phone, Priority, ServiceID) VALUES 
('Laura Müller', 'laura.mueller@example.com', '789123456', 'Hoch', 6);
GO